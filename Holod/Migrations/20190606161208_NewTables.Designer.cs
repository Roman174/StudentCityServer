// <auto-generated />
using System;
using Holod.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Holod.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190606161208_NewTables")]
    partial class NewTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("Holod.Models.Database.Coordinates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.HasKey("Id");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("Holod.Models.Database.Hostel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int?>("CoordinatesId");

                    b.Property<int>("NumberFloors");

                    b.Property<int>("NumberStudents");

                    b.Property<string>("Phone");

                    b.Property<string>("Photo");

                    b.Property<double>("Rating");

                    b.Property<int>("StudentCityId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CoordinatesId");

                    b.HasIndex("StudentCityId");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("Holod.Models.Database.Pass.PassInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IdResident");

                    b.HasKey("Id");

                    b.HasIndex("IdResident")
                        .IsUnique();

                    b.ToTable("Passes");
                });

            modelBuilder.Entity("Holod.Models.Database.Pass.RequestPass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Faculty");

                    b.Property<string>("Firstname");

                    b.Property<string>("NumberOfHostel");

                    b.Property<int>("NumberOfRoom");

                    b.Property<string>("Patronymic");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("RequestsPasses");
                });

            modelBuilder.Entity("Holod.Models.Database.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Holod.Models.Database.QueueInfo.CellQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("QueueId");

                    b.Property<DateTime>("RecordingTime");

                    b.Property<int>("ResidentId");

                    b.HasKey("Id");

                    b.HasIndex("QueueId");

                    b.HasIndex("ResidentId")
                        .IsUnique();

                    b.ToTable("CellQueue");
                });

            modelBuilder.Entity("Holod.Models.Database.QueueInfo.Queue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HostelId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("HostelId");

                    b.ToTable("Queue");
                });

            modelBuilder.Entity("Holod.Models.Database.Resident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CellQueueId");

                    b.Property<string>("Firstname");

                    b.Property<int?>("HostelId");

                    b.Property<string>("NumberRoom");

                    b.Property<int?>("PassInfoId");

                    b.Property<string>("Patronymic");

                    b.Property<string>("Photo");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("HostelId");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("Holod.Models.Database.StudentCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Photo");

                    b.HasKey("Id");

                    b.ToTable("StudentCities");
                });

            modelBuilder.Entity("Holod.Models.Database.Stuff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Firstname");

                    b.Property<int?>("HostelId");

                    b.Property<string>("Patronymic");

                    b.Property<string>("Photo");

                    b.Property<int>("PostId");

                    b.Property<int?>("StudentCityId");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("HostelId");

                    b.HasIndex("PostId")
                        .IsUnique();

                    b.HasIndex("StudentCityId");

                    b.ToTable("Stuffs");
                });

            modelBuilder.Entity("Holod.Models.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Holod.Models.Database.Hostel", b =>
                {
                    b.HasOne("Holod.Models.Database.Coordinates", "Coordinates")
                        .WithMany()
                        .HasForeignKey("CoordinatesId");

                    b.HasOne("Holod.Models.Database.StudentCity", "StudentCity")
                        .WithMany("Hostels")
                        .HasForeignKey("StudentCityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Holod.Models.Database.Pass.PassInfo", b =>
                {
                    b.HasOne("Holod.Models.Database.Resident", "Resident")
                        .WithOne("PassInfo")
                        .HasForeignKey("Holod.Models.Database.Pass.PassInfo", "IdResident")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Holod.Models.Database.QueueInfo.CellQueue", b =>
                {
                    b.HasOne("Holod.Models.Database.QueueInfo.Queue", "Queue")
                        .WithMany("Cells")
                        .HasForeignKey("QueueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Holod.Models.Database.Resident", "Resident")
                        .WithOne("CellQueue")
                        .HasForeignKey("Holod.Models.Database.QueueInfo.CellQueue", "ResidentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Holod.Models.Database.QueueInfo.Queue", b =>
                {
                    b.HasOne("Holod.Models.Database.Hostel", "Hostel")
                        .WithMany("Queues")
                        .HasForeignKey("HostelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Holod.Models.Database.Resident", b =>
                {
                    b.HasOne("Holod.Models.Database.Hostel", "Hostel")
                        .WithMany("Residents")
                        .HasForeignKey("HostelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Holod.Models.Database.Stuff", b =>
                {
                    b.HasOne("Holod.Models.Database.Hostel", "Hostel")
                        .WithMany("Stuffs")
                        .HasForeignKey("HostelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Holod.Models.Database.Post", "Post")
                        .WithOne("Stuff")
                        .HasForeignKey("Holod.Models.Database.Stuff", "PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Holod.Models.Database.StudentCity", "StudentCity")
                        .WithMany("Stuffs")
                        .HasForeignKey("StudentCityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
